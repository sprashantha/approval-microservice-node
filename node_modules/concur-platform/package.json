{
  "name": "concur-platform",
  "version": "0.1.9",
  "description": "The concur-platform-sdk-js",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/concur/concur-platform-sdk-js.git"
  },
  "keywords": [
    "concur",
    "concur platform",
    "sdk",
    "javscript"
  ],
  "author": {
    "name": "Concur Technologies"
  },
  "license": "Apache 2.0",
  "dependencies": {
    "q": "^1.0.1",
    "request": "^2.40.0",
    "util": "^0.10.3",
    "xml2js": "^0.4.4"
  },
  "devDependencies": {
    "chai": "^1.9.1",
    "config": "^1.0.2",
    "mocha": "^1.21.4"
  },
  "bugs": {
    "url": "https://github.com/concur/concur-platform-sdk-js/issues"
  },
  "homepage": "https://github.com/concur/concur-platform-sdk-js",
  "directories": {
    "test": "test"
  },
  "readme": "Concur SDK for JavaScript\n==============\n\nJavaScript SDK for the [Concur Platform](http://developer.concur.com). For more information on the set of platform services, see the [Web services overview](https://developer.concur.com/get-started/webservices-overview) document on the developer portal.\n\n[![NPM](https://nodei.co/npm/concur-platform.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/concur-platform/)\n\n## Installation\n\n    npm install concur-platform\n\n## Usage\n\nAll platform services are exposed via a root module which can be imported using the following.\n\n    var concur = require('concur-platform');\n\n## Platform Services\n\n### OAuth\n\nEnables the client to acquire an [OAuth token](https://developer.concur.com/api-documentation/oauth-20-0).\n\n#### Usage\n\n#####Native Flow\n\nThis is for the [native flow Oauth](https://developer.concur.com/api-documentation/oauth-20-0/native-flow). Use this\nto get a token to test your application. This requires username, password and your registered consumerkey.\n\n    var concur = require('concur-platform');\n\n    var options = {\n        username:username,\n        password:password,\n        consumerKey:consumerKey\n    }\n\n    concur.oauth.native(options)\n    .then(function(token) {\n        // token will contain the value, instanceUrl, refreshToken, and expiration details\n    })\n    .fail(function(error) {\n        // error will contain the error message returned\n    });\n\n#####AppCenter Flow\n\nThis is for the [AppCenter Flow](https://developer.concur.com/api-documentation/oauth-20-0/app-center-flow).\nAppCenter Flow requires the code query parameter from Concur AppCenter, clientID (consumerKey) and clientSecret\nfor your registered partner application.\n\n    var options = {\n        code:code,\n        client_id:client_id,\n        client_secret:client_secret\n    }\n\n    concur.oauth.appCenter(options)\n    .then(function(token) {\n        // token will contain the value, instanceUrl, refreshToken, and expiration details\n    })\n    .fail(function(error) {\n        // error will contain the error message returned\n    });\n\n### Quick Expenses\n\nEnables the client to interact with the [quick expense](https://www.concursolutions.com/api/docs/index.html#!/QuickExpenses) web service.\n\n#### Usage\n\n##### POST\n\n    var quickexpenseJSON = {\n        \"Comment\": \"I am a Quick Expense\",\n        \"CurrencyCode\": \"USD\",\n        \"ExpenseTypeCode\": \"CARMI\",\n        \"LocationCity\": \"Seattle\",\n        \"LocationCountry\": \"US\",\n        \"LocationSubdivision\": \"US-WA\",\n        \"TransactionAmount\": \"12.23\",\n        \"TransactionDate\": \"2015-05-10\",\n        \"VendorDescription\": \"Testing\"\n    };\n\n    var options = {\n        oauthToken:oauthToken,\n        contentType:'application/json',\n        body:quickexpenseJSON\n    };\n\n    concur.quickexpense.send(options)\n    .then(function(data){\n        //Contains the ID and URI to the resouce\n    })\n    .fail(function (error) {\n        //Error contains the error returned\n    });\n\n##### GET\n\n    //Get a list of quick expenses\n    var options = {\n        oauthToken:oauthToken\n    };\n\n    concur.quickexpense.get(options)\n    .then(function(data) {\n        //Data contains a list of quick expenses\n    })\n    .fail(function (error) {\n        //Error contians the error returned\n    });\n\n    //Get a single quick expense, just add quickexpenseId to options\n    var options = {\n        oauthToken:oauthToken,\n        quickexpenseId:quickexpenseId\n    };\n\n    concur.quickexpense.get(options)\n    .then(function(data) {\n        //Contains the single quick expense\n    })\n    .fail(function (error) {\n        //Contains the error returned\n    });\n\n##### PUT\n\n    var quickexpenseJSON = {\n        \"TransactionAmount\": \"16.23\"\n    };\n\n    var options = {\n        oauthToken:oauthToken,\n        contentType:'application/json',\n        quickexpenseId:quickexpenseId,\n        body:quickexpenseJSON\n    };\n\n    concur.quickexpense.put(options)\n    .then(function(data){\n        //Contains the response code 204, for a successful resource update\n    })\n    .fail(function (error) {\n        //Contains the error returned\n    });\n\n##### DELETE\n\n    var options = {\n        oauthToken:oauthToken,\n        quickexpenseId:quickexpenseId\n    };\n\n    concur.quickexpense.delete(options)\n    .then(function(data) {\n        //Contains the response code 204, for a successful resource update\n    })\n    .fail(function (error) {\n        //Contains the error returned\n    });\n\n### Receipt\n\nEnables the client to interact with the [receipt](https://www.concursolutions.com/api/docs/index.html#!/ReceiptImages) and [eReceipt](https://developer.concur.com/api-documentation/more-resources/draft-documentation/e-receipt-service) Web services.\n\n#### Usage\n\n    var concur = require('concur-platform');\n\n    var options = {\n        oauthToken:oauthToken,\n        image:image,\n        contentType:'image/png'\n    }\n\n    // Sending a receipt\n    concur.receipt.send(options)\n    .then(function(receiptID) {\n        //receiptID is returned on success\n    })\n    .fail(function(error) {\n        // error will contain the error message returned\n    });\n\n    // Getting receipts\n    var options = {\n        oauthToken:oauthToken\n    }\n\n    concur.receipt.get(options)\n    .then(function(data) {\n        //data will contain a list of receipts\n    })\n    .fail(function(error) {\n        // error will contain the error message returned\n    });\n\n    //Get a receipt image URL by image ID.\n    var options = {\n        oauthToken:oauthToken,\n        receiptId:receiptId\n    }\n\n    concur.receipt.get(options)\n    .then(function(data) {\n        //data will contain the receipt image url\n    })\n    .fail(function(error) {\n        // error will contain the error message returned\n    });\n\n    // Deleting a receipt\n    var options = {\n        oauthToken:oauthToken,\n        receiptId:receiptId\n    }\n\n    concur.receipt.delete(options)\n    .then(function(data.statusCode) {\n        // data.statusCode will be equal to 204, the receipt was deleted\n    })\n    .fail(function(error) {\n        // error will contain the error message returned\n    });\n\n###User\n\nEnables the user to interact with the [user](https://developer.concur.com/api-documentation/web-services/user) Web service.\n\n####Usage\n\n    var options = {\n        oauthToken:oauthToken,\n        loginId:loginId\n    }\n\n    concur.user.get(options)\n    .then(function(user) {\n        // user will contain user data\n    })\n    .fail(function(error) {\n        // error will contain the error message returned\n    });\n\n## Tests\n\nTo run the client SDK tests, create a default.json file in the config folder which contains the credentials of the Concur account to test with. Template.json can be used as a template. Then, run the following:\n\n    npm test\n\nThe test will upload the concur logo to the expense receipt store associated with the OAuth token. It will also upload an E-Receipt to the associated user account. \n\n## Promises\nIn order to simplify the asynchronous nature of the platform Web service calls, the client SDK has made use of the Q promises library. More information can be found on the [project's GitHub site](https://github.com/kriskowal/q).\n\n## License\n\nCopyright 2014 [Concur](http://www.concur.com)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "readmeFilename": "README.md",
  "_id": "concur-platform@0.1.9",
  "_from": "concur-platform@0.1.9",
  "dist": {
    "shasum": "3587ef6012467c5b4a5e66881f42c672591cb9a6"
  },
  "_resolved": "https://registry.npmjs.org/concur-platform/-/concur-platform-0.1.9.tgz"
}
